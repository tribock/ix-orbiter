kind: nodeagent.caos.ch/NodeAgents
version: v0
spec:
  commit: 48e0d919722b814707be9dac317017ed5203bf85
  nodeagents:
    k8s-orb-0:
      changesallowed: true
      software:
        swap:
          version: disabled
        kubelet:
          version: v1.17.0
        kubeadm:
          version: v1.17.0
        kubectl:
          version: v1.17.0
        containerruntime:
          version: docker-ce v19.03.5
        keepalived:
          config:
            keepalived.conf: |+
              global_defs {
              	enable_script_security
              	script_user tribock
              }

              vrrp_sync_group VG1 {
              	group {
                      VI_0
                  }
              }

              vrrp_script chk_13.95.123.109 {
              	script       "/usr/local/bin/health 200@http://127.0.0.1:29999/ready"
              	interval 2   # check every 2 seconds
              	fall 15      # require 2 failures for KO
              	rise 2       # require 2 successes for OK
              }

              vrrp_instance VI_0 {
              	state BACKUP
              	unicast_src_ip 52.233.194.215
              	unicast_peer {
              		13.95.123.109
              		    }
              	interface eth0
              	virtual_router_id 55
              	advert_int 1
              	authentication {
              		auth_type PASS
              		auth_pass [ REDACTED ]
              	}
              	track_script {
              		chk_13.95.123.109
              	}

              	virtual_ipaddress {
              		13.95.123.109
              	}

              }

        nginx:
          config:
            nginx.conf: "events {\n\tworker_connections  4096;  ## Default: 1024\n}\n\nstream
              { \n\tupstream httpsingress {    \n\t\tserver 13.95.123.109:30443; #
              workers\n\t\tserver 52.233.194.215:30443; # workers\n\t}\n\tserver {\n\t\tlisten
              13.95.123.109:443;\n\t\tproxy_pass httpsingress;\n\t}\n\n\tupstream
              httpingress {    \n\t\tserver 13.95.123.109:30080; # workers\n\t\tserver
              52.233.194.215:30080; # workers\n\t}\n\tserver {\n\t\tlisten 13.95.123.109:80;\n\t\tproxy_pass
              httpingress;\n\t}\n}\n\nhttp {\n\tserver {\n\t\tlisten 29999;\n\n\t\tlocation
              /ready {\n\t\t\treturn 200;\n\t\t}\n\t}\n}\n"
        hostname:
          config:
            hostname: worker02
      firewall:
        calico-bgp:
          port: "179"
          protocol: tcp
        httpingress-80-src:
          port: "80"
          protocol: tcp
        httpingress-30080-dest:
          port: "30080"
          protocol: tcp
        httpsingress-443-src:
          port: "443"
          protocol: tcp
        httpsingress-30443-dest:
          port: "30443"
          protocol: tcp
        kubelet:
          port: "10250"
          protocol: tcp
        node-ports:
          port: 30000-32767
          protocol: tcp
    k8s-orb-1:
      changesallowed: true
      software:
        swap:
          version: disabled
        kubelet:
          version: v1.17.0
        kubeadm:
          version: v1.17.0
        kubectl:
          version: v1.17.0
        containerruntime:
          version: docker-ce v19.03.5
        keepalived:
          config:
            keepalived.conf: |+
              global_defs {
              	enable_script_security
              	script_user tribock
              }

              vrrp_sync_group VG1 {
              	group {
                      VI_0
                  }
              }

              vrrp_script chk_13.95.123.109 {
              	script       "/usr/local/bin/health 200@http://127.0.0.1:29999/ready"
              	interval 2   # check every 2 seconds
              	fall 15      # require 2 failures for KO
              	rise 2       # require 2 successes for OK
              }

              vrrp_instance VI_0 {
              	state MASTER
              	unicast_src_ip 13.95.123.109
              	unicast_peer {
              		52.233.194.215
              		    }
              	interface eth0
              	virtual_router_id 55
              	advert_int 1
              	authentication {
              		auth_type PASS
              		auth_pass [ REDACTED ]
              	}
              	track_script {
              		chk_13.95.123.109
              	}

              	virtual_ipaddress {
              		13.95.123.109
              	}

              }

        nginx:
          config:
            nginx.conf: "events {\n\tworker_connections  4096;  ## Default: 1024\n}\n\nstream
              { \n\tupstream httpsingress {    \n\t\tserver 13.95.123.109:30443; #
              workers\n\t\tserver 52.233.194.215:30443; # workers\n\t}\n\tserver {\n\t\tlisten
              13.95.123.109:443;\n\t\tproxy_pass httpsingress;\n\t}\n\n\tupstream
              httpingress {    \n\t\tserver 13.95.123.109:30080; # workers\n\t\tserver
              52.233.194.215:30080; # workers\n\t}\n\tserver {\n\t\tlisten 13.95.123.109:80;\n\t\tproxy_pass
              httpingress;\n\t}\n}\n\nhttp {\n\tserver {\n\t\tlisten 29999;\n\n\t\tlocation
              /ready {\n\t\t\treturn 200;\n\t\t}\n\t}\n}\n"
        hostname:
          config:
            hostname: worker01
      firewall:
        calico-bgp:
          port: "179"
          protocol: tcp
        httpingress-80-src:
          port: "80"
          protocol: tcp
        httpingress-30080-dest:
          port: "30080"
          protocol: tcp
        httpsingress-443-src:
          port: "443"
          protocol: tcp
        httpsingress-30443-dest:
          port: "30443"
          protocol: tcp
        kubelet:
          port: "10250"
          protocol: tcp
        node-ports:
          port: 30000-32767
          protocol: tcp
    k8s-orb-3:
      changesallowed: true
      software:
        swap:
          version: disabled
        kubelet:
          version: v1.17.0
        kubeadm:
          version: v1.17.0
        kubectl:
          version: v1.17.0
        containerruntime:
          version: docker-ce v19.03.5
        keepalived:
          config:
            keepalived.conf: |+
              global_defs {
              	enable_script_security
              	script_user tribock
              }

              vrrp_sync_group VG1 {
              	group {
                      VI_0
                  }
              }

              vrrp_script chk_172.16.1.7 {
              	script       "/usr/local/bin/health 200@http://127.0.0.1:29999/ready"
              	interval 2   # check every 2 seconds
              	fall 15      # require 2 failures for KO
              	rise 2       # require 2 successes for OK
              }

              vrrp_instance VI_0 {
              	state MASTER
              	unicast_src_ip 137.117.254.12
              	unicast_peer {
              		    }
              	interface eth0
              	virtual_router_id 55
              	advert_int 1
              	authentication {
              		auth_type PASS
              		auth_pass [ REDACTED ]
              	}
              	track_script {
              		chk_172.16.1.7
              	}

              	virtual_ipaddress {
              		172.16.1.7
              	}

              }

        nginx:
          config:
            nginx.conf: "events {\n\tworker_connections  4096;  ## Default: 1024\n}\n\nstream
              { \n\tupstream kubeapi {    \n\t}\n\tserver {\n\t\tlisten 172.16.1.7:443;\n\t\tproxy_pass
              kubeapi;\n\t}\n}\n\nhttp {\n\tserver {\n\t\tlisten 29999;\n\n\t\tlocation
              /ready {\n\t\t\treturn 200;\n\t\t}\n\t}\n}\n"
        hostname:
          config:
            hostname: master01
      firewall:
        calico-bgp:
          port: "179"
          protocol: tcp
        etcd:
          port: 2379-2380
          protocol: tcp
        kube-controller:
          port: "10252"
          protocol: tcp
        kube-scheduler:
          port: "10251"
          protocol: tcp
        kubeapi-443-dest:
          port: "443"
          protocol: tcp
        kubeapi-443-src:
          port: "443"
          protocol: tcp
        kubeapi-external:
          port: "443"
          protocol: tcp
        kubeapi-internal:
          port: "6666"
          protocol: tcp
        kubelet:
          port: "10250"
          protocol: tcp
